// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
model UserSchema{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  lastname String
  email String @unique
  password String
  userdetail   UserDetail[]
}
model UserDetail{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  lat String?
  long String?
  userId String @db.ObjectId @unique
  phone Int
  state String
  currentstd String
  age Int
  gender String
  fieldofinterest String
  socialmedia Json?
  Stemresponse Json?
  Interestbasedresponse Json? 
  userschema   UserSchema  @relation(fields: [userId], references: [id])
}
model EduSchema{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  lastname String
  email String @unique
  password String
  educatordetail EducatorDetail[]
}
model EducatorDetail{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  education String
  subject String
  educatorId String @db.ObjectId
  eduschema EduSchema @relation(fields: [educatorId], references: [id])
}
model QuestionPdf {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   // Original file name
  data        Bytes    // Blob for storing file content
  contentType String   // MIME type of the file (e.g., application/pdf)
  uploaderId  String   // ID of the uploader
  subject     String
  level       String
  createdAt   DateTime @default(now())
}

